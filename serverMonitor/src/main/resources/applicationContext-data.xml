<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	xmlns:util="http://www.springframework.org/schema/util" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:context="http://www.springframework.org/schema/context" 
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd
    	http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.0.xsd
		http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.2.xsd
		http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa.xsd">  
	<import resource="applicationContext-env.xml"/>
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="${spring.datasource.url}" />
		<property name="username" value="${spring.datasource.username}" />
		<property name="password" value="${spring.datasource.password}" />
		<property name="maxActive" value="${db.pool.maxsize}" />
		<!-- 最大空闲值，当经过一个高峰时间后，连接池可以慢慢将已经用不到的连接释放，一直减少到msxIdle为止 -->
		<property name="maxIdle" value="${db.pool.maxIdle}" />
		<!-- 最小空闲值，当空闲的连接数小于阀值时，连接池就会预申请一些连接，以免洪峰到来时来不及申请 -->
		<property name="minIdle" value="${db.pool.minIdle}" />
		<property name="testWhileIdle" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="10000" />
		<property name="minEvictableIdleTimeMillis" value="10000" />
		<property name="validationQuery" value="${db.pool.validationQuery}" />
		<property name="defaultAutoCommit" value="true" />
	</bean>
	<!-- jpa配置 -->
	<bean id="mysqlDialect" class="org.springframework.beans.factory.config.FieldRetrievingFactoryBean">
		<property name="staticField" value="org.springframework.orm.jpa.vendor.Database.MYSQL" />
	</bean>

	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="persistenceUnitName" value="SpringJpa" />
		<property name="packagesToScan" value="org.serverMonitor.entity" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="${jpa.showSql}" />
				<property name="generateDdl" value="${jpa.generateDdl}" />
				<property name="database" ref="mysqlDialect" />
			</bean>
		</property>
		<!-- 表名和字段名映射自动以下划线分隔 -->
		<!-- <property name="jpaProperties">
			<props>
				<prop key="hibernate.ejb.naming_strategy">com.busap.jpa.SpringNamingStrategy</prop>
			</props>
		</property> -->
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<!-- spring自动注入 -->
	<context:component-scan base-package="org.serverMonitor">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Service" /> 
		<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
		<context:exclude-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice" />
	</context:component-scan>
	<bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html; charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="supportedMediaTypes">
                        <list>
                            <value>text/html; charset=UTF-8</value>
                            <value>application/json;charset=UTF-8</value>
                        </list>
                    </property>
                </bean>
            </list>
        </property>
    </bean>
	<bean id="jedisPoolConfig" class="org.apache.commons.pool2.impl.GenericObjectPoolConfig">
		<property name="maxTotal" value="20" />
		<property name="maxIdle" value="10" />
		<property name="minIdle" value="5" />
		<!-- <property name="maxWait" value="2000"/> -->
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="true" />
	</bean>

	<bean id="jedisPool" class="redis.clients.jedis.JedisPool">
		<constructor-arg index="0" ref="jedisPoolConfig" />
		<constructor-arg index="1" value="${redis.hostName}" />
		<constructor-arg index="2" value="${redis.port}" />
		<constructor-arg index="3" value="2000" />
		<!-- <constructor-arg index="4"/> <constructor-arg index="5" value="15"/> -->
	</bean>
	
	<!-- 扫描mybatis的xml文件 -->
<!-- 	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:/mybatis/mybatis-config.xml" />
		<property name="typeAliasesPackage" value="org.serverMonitor.entity" />
		<property name="mapperLocations" value="classpath*:/persistence/*Mapper.xml" />
	</bean>
	
	scan for mappers and let them be autowired
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="org.serverMonitor.dao" />
    </bean> -->

	
    <!-- 配置JDBC数据源的局部事务管理器，使用DataSourceTransactionManager 类   
                  该类实现PlatformTransactionManager接口，是针对采用数据源连接的特定实现-->  
<!--     <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">  
        <property name="dataSource" ref="dataSource"></property>  
    </bean>   -->
  <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="delete*" propagation="REQUIRED" read-only="false"  
                            rollback-for="java.lang.Exception" no-rollback-for="java.lang.RuntimeException"/>
       <tx:method name="save" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.RuntimeException" />
      <tx:method name="update*" propagation="REQUIRED" read-only="false" 
                            rollback-for="java.lang.Exception" />
      <tx:method name="*"  propagation="SUPPORTS"/>
    </tx:attributes>
  </tx:advice>
  
  <aop:config>    
    <aop:pointcut id="allManagerMethod" expression="execution(* org.serverMonitor.service.*.*(..))" /> 
    <aop:advisor pointcut-ref="allManagerMethod" advice-ref="txAdvice" />
  </aop:config> 
  
  	<jpa:repositories base-package="org.serverMonitor.dao" />
  	<aop:aspectj-autoproxy proxy-target-class="true"/>
 <!-- 开启事务注解驱动 -->  
    <tx:annotation-driven transaction-manager="transactionManager" /> 
    <!-- spring注解模式配置 -->  
    <context:annotation-config/>  
	 <security:authentication-manager>  
        <security:authentication-provider>  
            <security:user-service>  
                <security:user name="user" password="pw"  
                    authorities="ROLE_USER, ROLE_ADMIN" />  
                <security:user name="bob" password="bob"  
                    authorities="ROLE_USER" />  
            </security:user-service>  
        </security:authentication-provider>  
    </security:authentication-manager>  
  
    <security:http auto-config='true'>  
        <security:intercept-url pattern="/login.jsp*"  
            access="IS_AUTHENTICATED_ANONYMOUSLY" />  
        <security:intercept-url pattern="/**" access="ROLE_USER" />  
        <security:form-login />  
    </security:http> 
</beans>